1 + 1
2 + 3
1 + 1
5 / 3
1 + 1
5 / 3
## [1] 2
# These two lines add numbers together
c(1, 2, 3) + c(2, 3, 4)
c(2, 4, 7)
x <- c(1, 2, 3)
y <- c(4, 5, 6)
x
y
x + y
x / y
3 * x
3*x
1+2
3+x
X
mean(x)
median (y)
mode (x)
median
help (mean)
? mean
help(mean)
5 == 2+3
6 ==2+3
5 = 2+3
5 <- 1+2
2 != 1+1
5 <= 1+2
3 > x & x < 7
x <- 5
3 > x & x < 7
x > 8 | 5 < x < 7
x > 8 | 3 > x & x < 7
x <- c(1,3,5,7,9)
x[c(1,3,5)]
x[c(TRUE, FALSE, FALSE, FALSE, TRUE)]
x < 6
x[x <6]
length (x)
summary (x)
x
rm (x)
ls
ls ()
scored <- c(14, 14, 9, 14, 28, 13, 13, 24, 17, 6, 24, 0, 24, 13, 26, 14)
against <- c(19, 30, 16, 38, 31, 24, 23, 30, 41, 13, 20, 52, 13, 31, 24, 47)
scored [7]
score [c (1, 2, 3, 4, 5)]
socred [c (1,2,3,4,5)]
scored [c (1,2,3,4,5)]
scored [even]
help (seq)
seq (from = 2, to = length(scored), by = 2)
scored [seq (from = 2, to = length (scored), by =2)]
tail (scored)
scored [length (scored)]
scored [scored > 14]
scored [scored == 14]
scored [scored == 13 | 14]
scored [scored == 13 | scored == 14]
scored [scored > 7 & scored < 21]
sort (-scored)
help (sort)
sort (scored, decreasing = TRUE)
sort (scored)
scored (length (sort (scored)))
scored [length (sort (scored))]
scored [(sort (scored))]
max (scored)
min (scored)
mean (scored)
summary (scored)
length [scored > 20]
length (scored > 20)
socred > 20
scored > 20
length [scored > 20]
length [True == (scored > 20)]
length [ TRUE == (scored > 20)]
length (TRUE == (scored > 20))
scored (7)
scored [7] + against [7]
scored [c (1,2,3,4,5)]
scored [length (scored), (length (scored) - 1)]
? length
length (scored) <- (scored > 20)
length (scored)
length ((scored > 20))
(scored > 20)
TRUE == (scored > 20)
scored [TRUE == (scored > 20)]
length (scored [TRUE == (scored > 20)])
scored [length (scored)]
scored [c (length (scored), (length (scored) -1), (length (scored) - 2), (length (scored) - 3), (length (scored) - 4))]
length (scored)
length (against)
scored [c (16,15,14,13,12)] + against [c (16,15,14,13,12)]
?odd
scored [seq (from = 2, to = length (scored), by =2)]
scored [seq (from = 2, to = length (scored), by !=2)]
scored [!seq (from = 2, to = length (scored), by =2)]
scored > against
TRUE == (scored > against)
c [TRUE == (scored > against)]
sort (TRUE == (scored > against))
scored = against
scored == against
scored <- c(14, 14, 9, 14, 28, 13, 13, 24, 17, 6, 24, 0, 24, 13, 26, 14)
against <- c(19, 30, 16, 38, 31, 24, 23, 30, 41, 13, 20, 52, 13, 31, 24, 47)
scored == against
(scored > against)
scored [seq (from = 2, to = length (scored), by =2)]
scored [c (1,3,5,7,9,11,13,15)] - against [c (1,3,5,7,9,11,13,15)]
scored == against
scored <- c(14, 14, 9, 14, 28, 13, 13, 24, 17, 6, 24, 0, 24, 13, 26, 14)
against <- c(19, 30, 16, 38, 31, 24, 23, 30, 41, 13, 20, 52, 13, 31, 24, 47)
# PART 1
# 1. How many points did the Raiders score in game 7?
scored [7]
# 2. What was the score of the first 5 games?
scored [c (1,2,3,4,5)]
# 3. What were the scores of the even games? Try to do this problem without typing in c(2,4,…)
help (seq)
seq (from = 2, to = length(scored), by = 2)
scored [seq (from = 2, to = length (scored), by =2)]
# 4. What was the score of the last game? Try to do this problem without typing in the number of the last game.
scored [length (scored)]
# 5. Select the scores higher than 14.
scored [scored > 14]
# 6. Select the scores equal to 14.
scored [scored == 14]
# 7. Select the scores equal to 13 or 14.
scored [scored == 13 | scored == 14]
# 8. Select the scores between between 7 and 21 points.
scored [scored > 7 & scored < 21]
# 9. Sort the scores in decreasing order.
sort (scored, decreasing = TRUE)
# 10. What was the highest score achieved?
max (scored)
# 11. What was the lowest score achieved?
min (scored)
# 12. What was the average score?
mean (scored)
# 13. Use the summary() function to give some summary statistics.
summary (scored)
# 14. In how many games did the Raiders score over 20 points?
length (scored [TRUE == (scored > 20)])
# PART 2
# 1. What was the sum of the scores in game 7?
scored [7] + against [7]
# 2.What was the sum of the scores in the last 5 games?
length (scored)
length (against)
scored [c (16,15,14,13,12)] + against [c (16,15,14,13,12)]
# 3. What was the difference in scores in the odd games?
scored [c (1,3,5,7,9,11,13,15)] - against [c (1,3,5,7,9,11,13,15)]
# 4. Which games did the Raiders win?
(scored > against)
3 games.
# 5. Were there any ties?
NA.
scored == against
(scored > against)
(scored > against)
(scored > against)
which (scored > against)
which (scored == against)
length (which (scored > 20))
scored [12:16]
scored [12:16]+ against [12: 16]
scored [c (16,15,14,13,12)] + against [c (16,15,14,13,12)]
length (scored [scored >20])
scored [scored >20]
scored <- c(14, 14, 9, 14, 28, 13, 13, 24, 17, 6, 24, 0, 24, 13, 26, 14)
against <- c(19, 30, 16, 38, 31, 24, 23, 30, 41, 13, 20, 52, 13, 31, 24, 47)
# PART 1
# 1. How many points did the Raiders score in game 7?
scored [7]
# 2. What was the score of the first 5 games?
scored [c (1,2,3,4,5)]
# 3. What were the scores of the even games? Try to do this problem without typing in c(2,4,…)
help (seq)
seq (from = 2, to = length(scored), by = 2)
scored [seq (from = 2, to = length (scored), by =2)]
# 4. What was the score of the last game? Try to do this problem without typing in the number of the last game.
scored [length (scored)]
# 5. Select the scores higher than 14.
scored [scored > 14]
# 6. Select the scores equal to 14.
scored [scored == 14]
# 7. Select the scores equal to 13 or 14.
scored [scored == 13 | scored == 14]
# 8. Select the scores between between 7 and 21 points.
scored [scored > 7 & scored < 21]
# 9. Sort the scores in decreasing order.
sort (scored, decreasing = TRUE)
# 10. What was the highest score achieved?
max (scored)
# 11. What was the lowest score achieved?
min (scored)
# 12. What was the average score?
mean (scored)
# 13. Use the summary() function to give some summary statistics.
summary (scored)
# 14. In how many games did the Raiders score over 20 points?
length (scored [TRUE == (scored > 20)])
length (which (scored > 20))
length (scored [scored >20])
# PART 2
# 1. What was the sum of the scores in game 7?
scored [7] + against [7]
# 2.What was the sum of the scores in the last 5 games?
length (scored)
length (against)
scored [12:16]+ against [12: 16]
# 3. What was the difference in scores in the odd games?
scored [c (1,3,5,7,9,11,13,15)] - against [c (1,3,5,7,9,11,13,15)]
# 4. Which games did the Raiders win?
which (scored > against)
# 5. Were there any ties?
which (scored == against)
scored [c (1,3,5,7,9,11,13,15)] - against [c (1,3,5,7,9,11,13,15)]
sum (scored [seq (from =1, to = length (scored), by =2)])
scored [seq (from =1, to = length (scored), by =2)]
sum (scored [seq (from =1, to = length (scored), by =2)]) - sum (scored [seq (from = 1, to = length (scored, by = 2))])
sum (scored [seq (from =1, to = length (scored), by =2)]) - sum (scored [seq (from = 1, to = length (scored), by = 2)])
sum (scored [seq (from = 1, to = length (scored), by = 2)])
sum (against [seq (from = 1, to = length (against), by = 2)])
[seq (from =1, to = length (scored))]
seq (from =1, to = length (scored))
sum (scored [c (1,3,5,7,9,11,13,15)] - against [c (1,3,5,7,9,11,13,15)])
sum (scored [seq (from =1, to = length (scored), by =2)]) -sum (against [seq (from = 1, to = length (against), by = 2)])
scored <- c(14, 14, 9, 14, 28, 13, 13, 24, 17, 6, 24, 0, 24, 13, 26, 14)
against <- c(19, 30, 16, 38, 31, 24, 23, 30, 41, 13, 20, 52, 13, 31, 24, 47)
# PART 1
# 1. How many points did the Raiders score in game 7?
scored [7]
# 2. What was the score of the first 5 games?
scored [c (1,2,3,4,5)]
# 3. What were the scores of the even games? Try to do this problem without typing in c(2,4,…)
help (seq)
seq (from = 2, to = length(scored), by = 2)
scored [seq (from = 2, to = length (scored), by =2)]
# 4. What was the score of the last game? Try to do this problem without typing in the number of the last game.
scored [length (scored)]
# 5. Select the scores higher than 14.
scored [scored > 14]
# 6. Select the scores equal to 14.
scored [scored == 14]
# 7. Select the scores equal to 13 or 14.
scored [scored == 13 | scored == 14]
# 8. Select the scores between between 7 and 21 points.
scored [scored > 7 & scored < 21]
# 9. Sort the scores in decreasing order.
sort (scored, decreasing = TRUE)
# 10. What was the highest score achieved?
max (scored)
# 11. What was the lowest score achieved?
min (scored)
# 12. What was the average score?
mean (scored)
# 13. Use the summary() function to give some summary statistics.
summary (scored)
# 14. In how many games did the Raiders score over 20 points?
length (scored [TRUE == (scored > 20)])
length (which (scored > 20))
length (scored [scored >20])
# PART 2
# 1. What was the sum of the scores in game 7?
scored [7] + against [7]
# 2.What was the sum of the scores in the last 5 games?
length (scored)
length (against)
scored [12:16]+ against [12: 16]
# 3. What was the difference in scores in the odd games?
sum (scored [c (1,3,5,7,9,11,13,15)] - against [c (1,3,5,7,9,11,13,15)])
sum (scored [seq (from =1, to = length (scored), by =2)]) -sum (against [seq (from = 1, to = length (against), by = 2)])
# 4. Which games did the Raiders win?
which (scored > against)
# 5. Were there any ties?
which (scored == against)
install.packages("knitr")
seq (1,6)
sort (x, decreasing = TRUE)
x <- c (13,6,14,2,11)
sort (x, decreasing = TRUE)
order (x, decreasing = TRUE)
head (x, 2)
tail (x, 3)
which (x <= 3)
which.max (x)
which.min (x)
unique (x)
any (x > 10^5)
all (x < 10^5)
x <- c(1,2,10)
y <- seq (1,5)
x "in" y
table (y)
x %in% y
str(cs)
setwd('~/Desktop/Stats R/githubrepos-jennyjiang95/hw4')
station <- read.csv("dc_stations.csv")
str(station)
trips <- read.csv("2014q4_trips.csv")
str(trips)
cs <- crossing(station,station)
cs <- crossing(station,station)
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
library(lubridate)
library(ggplot2)
library(ggrepel)
library(grid)
library(gridExtra)
cs <- crossing(station,station)
str(cs)
cs$nbBikes<- NULL
cs$nbEmptyDocks <- NULL
cs$nbBikes<- NULL
cs$nbEmptyDocks <- NULL
names(cs) <- c("sstation", "slat", "slong", "estation", "elat", "elong")
str(iii)
iii<- inner_join(cs,trips)
str(iii)
source("haversine.R")
iii<- mutate(iii, distance= with(iii, haversine (slat,slong,elat,elong)))
str(iii)
ggplot(iii,aes(x = distance,y = ..density..))+
geom_density(aes(fill=client), alpha = 0.5, color = NA)+
facet_wrap(~wd)+
scale_x_continuous(limits = c(0.0, 10.0), breaks = seq(0.0, 10.0, by = 2.5))+
labs(title = "Distance Between Start and End Stations",
x = "Distance (km)",
y = "Density")
iii<- mutate(iii, distance= with(iii, haversine (slat,slong,elat,elong)))
ggplot(iii,aes(x = distance,y = ..density..))+
geom_density(aes(fill=client), alpha = 0.5, color = NA)+
facet_wrap(~wd)+
scale_x_continuous(limits = c(0.0, 10.0), breaks = seq(0.0, 10.0, by = 2.5))+
labs(title = "Distance Between Start and End Stations",
x = "Distance (km)",
y = "Density")
str(iii)
