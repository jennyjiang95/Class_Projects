pew <- read.delim("~/Desktop/Stats R/stat133-su2016/10-lesson/data/pew.txt", header=FALSE)
View(pew)
library (readr)
df <- read_tsv ("pew.txt")
setwd ("/Users/jennyjiang/Desktop/Stats R/stat133-su2016/10-lesson/data/")
df <- read_tsv ("pew.txt")
str(df)
df
gather (df, key = income, value = numbers, <$10k, $10-20k, $20-30k, $30-40k, $40-50k, $50-75k, $75-100k, $100-150k, >150k, Don't know/refused)
gather (df, key = income, value = numbers, "<$10k", "$10-20k", "$20-30k", "$30-40k", "$40-50k", "$50-75k", "$75-100k", "$100-150k", ">150k", "Don't know/refused")
gather (df, key = income, value = numbers, -religion)
install.packages(tidyr)
install.packages("tidyr")
library (tidyr)
gather (df, key = income, value = numbers, "<$10k", "$10-20k", "$20-30k", "$30-40k", "$40-50k", "$50-75k", "$75-100k", "$100-150k", ">150k", "Don't know/refused")
gather (df, key = income, value = numbers, -religion)
head (longdf, 5)
view (df)
longdf <- gather (df, key = income, value = numbers, -religion)
head (longdf, 5)
tb <- read.csv("~/Desktop/Stats R/stat133-su2016/10-lesson/data/tb.csv", header=FALSE)
View(tb)
df <- read_csv(tb.csv)
df <- read_csv("tb.csv")
select (-new_sp)
df <- read_csv("tb.csv") %>%
select (-new_sp)
names(df) <- str_replace (names(df), "new_sp_", "")
library(stringr)
df <- read_csv("tb.csv") %>%
select (-new_sp)
names(df) <- str_replace (names(df), "new_sp_", "")
library (tidyr)
library (dplyr)
install.packages("dplyr")
install.packages("dplyr")
library (dplyr)
df <- read_csv("tb.csv") %>%
select (-new_sp)
names(df) <- str_replace (names(df), "new_sp_", "")
library (readr)
df <- read_tsv ("pew.txt")
library (dplyr)
library (tidyr)
library(stringr)
df <- read_csv("tb.csv") %>%
select (-new_sp)
names(df) <- str_replace (names(df), "new_sp_", "")
str(df)
df
gather (df, key = gender, value = n, -iso2, -year)
gdf <- gather (df, key = gender, value = n, -iso2, -year)
separate (df, col=gender, into = c ("gender", "age"), 1)
separate (df, col="gender", into = c ("gender", "age"), 1)
gdf <- gather (df, key = gender, value = n, -iso2, -year)
separate (gdf, col="gender", into = c ("gender", "age"), 1)
mutate (sdf, age = str_replace_all (age, age_ranges), gender = str_replace_all(gender, gender_values))
sdf <- separate (gdf, col="gender", into = c ("gender", "age"), 1)
mutate (sdf, age = str_replace_all (age, age_ranges), gender = str_replace_all(gender, gender_values))
age_ranges <- c("04"= "0-4", "514" = "5-14", "014" = "0-14", "1524" = "15-24", "2534" = "25-34", "3544" = "35-44","4554" = "45-54", "5564" = "55-64", "65" = "65+", "u"= "unknown")
gender_values <- c ("m" = "male", "f" = "female")
mutate (sdf, age = str_replace_all (age, age_ranges), gender = str_replace_all(gender, gender_values))
mdf <- mutate (sdf, age = str_replace_all (age, age_ranges), gender = str_replace_all(gender, gender_values))
mdf (na.omit)
mdf <- mutate (sdf, age = str_replace_all (age, age_ranges), gender = str_replace_all(gender, gender_values))
mdf[na.omit]
?na.omit
na.omit (mdf)
weather <- read.delim("~/Desktop/Stats R/stat133-su2016/10-lesson/data/weather.txt", header=FALSE)
View(weather)
df <- read_csv("weather.txt")
df
df <- read_csv("weather.txt")
df <- read_tsv("weather.txt")
df
gather (df, key = day, value = n, -year, - month, - id)
gdf <- gather (df, key = day, value = n, -year, - month, - id)
gather (df, key = day, value = n, -year, - month, - id, -element)
gdf <- gather (df, key = day, value = n, -year, - month, - id, -element)
separate (gdf, col= "day", into = c ("d", "days"), "d")
mutate (gdf, n = str_replace_all(n, n/10))
mutate (gdf, n = str_replace_all(n, n*(0.1)))
na.omit (gdf)
omdf <- na.omit (gdf)
mutate (omdf, n = str_replace_all(n, n*(0.1)))
omdf <- na.omit (gdf)
mutate (omdf, n = n*0.1)
omdf$n <- as.numeric(n)
omdf$n <- as.numeric(omdf$n)
mutate (omdf, n = (n*0.1))
gdf <- gather (df, key = day, value = n, -year, - month, - id, -element)
omdf <- na.omit (gdf)
omdf$n <- as.numeric(omdf$n)
mdf <- mutate (omdf, n = (n*0.1))
separate (mdf, col= "day", into = c ("d", "days"), "d")
sdf <- separate (mdf, col= "day", into = c ("d", "days"), "d")
sdf [5]
sdf [5] <- NULL
sdf
arrange(sdf,desc(month))
arrange(sdf,month)
arrange(sdf,month,days)
adf<- arrange(sdf,month)
arrange(adf,days)
adf<- arrange(sdf,month)
adf
arrange(adf,days)
adf
adf$days <- as.integer(adf$days)
arrange(adf,days)
mdf$day <- str_replace(mdf$day,"d","")
mdf
mdf$element<-str_to_lower(mdf$element)
mdf
mdf$days <- as.integer(mdf$days)
mdf$days <- as.integer(mdf$day)
mdf
mdf$days <- NULL
mdf$day <- as.integer(mdf$day)
mdf
arrange(mdf,days)
arrange(mdf,day)
arrange(mdf,n)
billboard <- read.csv("~/Desktop/Stats R/stat133-su2016/10-lesson/data/billboard.csv", header=FALSE)
View(billboard)
df <-read_csv("billboard.csv")
df
str(df)
gather(df, key = weeks, value = n, -year, -artist.inverted, -track, -time, -genre, -date.entered, -date.peaked)
gdf<- gather(df, key = weeks, value = n, -year, -artist.inverted, -track, -time, -genre, -date.entered, -date.peaked)
str(gdf)
str_replace_all(gdf$weeks, "x", "")
sdf <- str_replace_all(gdf$weeks, "x", "")
sdf
gdf
str(gdf)
gdf$weeks <- str_replace_all(gdf$weeks, "x", "")
gdf
str(gdf)
df
order (gdf$n)
gdf<- gather(df, key = weeks, value = rank, -year, -artist.inverted, -track, -time, -genre, -date.entered, -date.peaked)
gdf
gdf$weeks <- str_replace_all(gdf$weeks, "x", "")
str(gdf)
unique(gdf)
select(gdf, -week, -rank,-date.entered, -date.peaked)
select(gdf, -weeks, -rank,-date.entered, -date.peaked)
unique (select(gdf, -weeks, -rank,-date.entered, -date.peaked))
sdf <- select(gdf, -weeks, -rank,-date.entered, -date.peaked)
unique(sdf)
mutate(song_ID =row_number())
udf<- unique(sdf)
mutate(udf, song_ID =row_number())
mutate(udf, song_ID =row_number())
udf<- unique(sdf)
udf
gdf
gdf<- gather(df, key = weeks, value = rank, -year, -artist.inverted, -track, -time, -genre, -date.entered, -date.peaked)
gdf
sdf <- select(gdf, -weeks, -rank,-date.entered, -date.peaked)
udf<- unique(sdf)
udf
mutate(udf, song_ID =row_number())
gdf
sdf <- select(gdf, -weeks, -rank,-date.entered, -date.peaked)
sdf
mutate (udf, udf$weeks =str_match(udf$weeks, "[0-9]+"))
mutate (udf$weeks, str_match(udf$weeks, "[0-9]+"))
mutate (udf, str_match(udf$weeks, "[0-9]+"))
mutate (udf, str_match(weeks, "[0-9]+"))
udf
gdf
mutate (gdf, str_match(weeks, "[0-9]+"))
mdf <- mutate (gdf, str_match(weeks, "[0-9]+"))
str(mdf)
codons <- read_csv ("codons")
dna_to_aa <- function(x){
dna <- codons$dna_triplet
dna2 <- codons$dna_triplet
names (dna) <- codons$amino_acid
y <- substring(x,seq(1,nchar(x),3),seq(3,nchar(x),3))
y1 <- substring(x,seq(1,nchar(x),3),seq(3,nchar(x),3))
for (m in (1: (length(y)))){
y <- str_replace_all (y,dna2[dna2==y[m]], names(dna[dna == y[m]]))
}
if (length(y) == 0){
stop ("Invalid DNA sequence")
}
else{
str_c (y, collapse = "")
}
}
setwd ("/Users/jennyjiang/Desktop/Stats133/hw2/")
codons <- read_csv ("codons")
dna_to_aa <- function(x){
dna <- codons$dna_triplet
dna2 <- codons$dna_triplet
names (dna) <- codons$amino_acid
y <- substring(x,seq(1,nchar(x),3),seq(3,nchar(x),3))
y1 <- substring(x,seq(1,nchar(x),3),seq(3,nchar(x),3))
for (m in (1: (length(y)))){
y <- str_replace_all (y,dna2[dna2==y[m]], names(dna[dna == y[m]]))
}
if (length(y) == 0){
stop ("Invalid DNA sequence")
}
else{
str_c (y, collapse = "")
}
}
dna_to_aa("UCUGAGAAU")
dna_to_aa("ATCTAGATAGTAGGC")
?n()
sepal_counts <- factorized %>%
group_by(Sepal.Length, Sepal.Width) %>%
tally()
library(stringr)
library(dplyr)
library(tidyr)
factorized <- iris %>%
mutate (Sepal.Width = ifelse (Sepal.Width> 3, "wide", "narrow"),
Sepal.Length = ifelse (Sepal.Length> 5.5, "long", "short"))
factorized
sepal_counts <- factorized %>%
group_by(Sepal.Length, Sepal.Width) %>%
tally()
sepal_counts
sepal_counts <- factorized %>%
group_by(Sepal.Length, Sepal.Width) %>%
summarise(n())
sepal_counts
set.seed (20)
df <- data.frame(replicate(6, sample(c(1:10, -99), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
sample(20)
sample(20)
set.seed (20)
sample(20)
sample(20)
set.seed (20)
sample(20)
sample(20)
str_detect (iris$Species,"^([^aeiou]*[aeiou]){4}[^aeiou]*$")
filter (str_detect (iris$Species,"^([^aeiou]*[aeiou]){4}[^aeiou]*$"))
filter (iris, str_detect (iris$Species,"^([^aeiou]*[aeiou]){4}[^aeiou]*$"))
?vapply
vapply(1:10, function(x) {with(split_sleep[[x]], extra[group== 2] - extra[group ==1])}, numeric(1))
split_sleep <- lapply (1:10, function(x) sleep[sleep$ID == x, ])
lapply (1:10, function(x) {with(sleep, ID == x)})
split_sleep
vapply(1:10, function(x) {with(split_sleep[[x]], extra[group== 2] - extra[group ==1])}, numeric(1))
vapply(split_sleep, with, numeric(1), extra[group==2] - extra[group==1])
vapply(1:10, function(x) {with(split_sleep$x, extra[group== 2] - extra[group ==1])}, numeric(1))
vapply(split_sleep, with, extra[group==2] - extra[group==1], numeric(1))
vapply(split_sleep, function(x) {with(x, extra[group== 2] - extra[group ==1])}, numeric(1))
