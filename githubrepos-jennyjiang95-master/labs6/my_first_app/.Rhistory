"net", "gross", "const_start", "op_start", "closure")
# add country name
france<- mutate(france, country = "France")
#Japan
japan <- page %>%
.[[21]] %>%
html_table(fill = TRUE)
#change names
names(japan) <- c("name", "reactor", "type", "model", "status",
"net", "gross", "const_start", "op_start", "closure")
#add country name
japan<- mutate(japan, country = "Japan")
#combine two data frame together
data <- rbind(japan,france)
#delete the first row
data <- data[-1,]
#change name of the type
data$type<- str_replace(data$type,"BWR", "Boiling Water") %>%
str_replace("FBR", "Fast Breeder") %>%
str_replace("PWR", "Pressurized Water") %>%
str_replace("GCR", "Gas Cooled") %>%
str_replace("HWGCR", "Heavy Water Gas Cooled")
#change the date format
data$const_start<- dmy(data$const_start)
data$net <- as.integer(data$net)
#graph
ggplot(data[which(data$type != ""),])+
geom_point(aes(x=year(const_start),y=net, shape = type, color = country),size = 2)+
scale_x_continuous(limits = c(1955, 2005),
breaks = seq(1960,2000,by=10)) +
scale_y_continuous(limits = c(0,1500),
breaks = seq(0, 1500, by = 500))+
labs(title = "Net Reactor Capacities in France and Japan",
x = "Construction Start Date",
y = "Net Capacity(MW)")
#delete the first row
japan <- japan[-1,]
#add a column row number
japan<- mutate(japan, no =row_number())
# change the japan$name to unique
japan<- mutate(japan, uniname = paste(japan$name,japan$no, ""))
#reverse the name order
japan$uniname<- rev(japan$uniname)
#change the op_start format to date
japan$op_start <- dmy(japan$op_start)
#change the const_start format to date
japan$const_start<- dmy(japan$const_start)
#replace the type name to the assigned one.
japan$type<- str_replace(japan$type,"BWR", "Boiling Water") %>%
str_replace("FBR", "Fast Breeder") %>%
str_replace("PWR", "Pressurized Water") %>%
str_replace("GCR", "Gas Cooled") %>%
str_replace("HWGCR", "Heavy Water Gas Cooled")
#create a list tat removes the repeated names
japan<- mutate(japan, replace=paste(japan$name,japan$reactor,""))
japan$replace <-sort(japan$replace, decreasing = T) %>%
str_replace("1","") %>%
str_replace_all(".*[0-9].*", "")
japan$uniname
#graph
ggplot(japan[which(japan$type != ""),],aes(x=year(const_start), y=uniname))+
geom_segment(aes(xend=year(op_start), yend=uniname, color = type)) +
scale_y_discrete(labels=rev(japan$replace),breaks=(japan$uniname))+
scale_x_continuous(limits = c(1960, 2010),
breaks = seq(1960,2010,by=5)) +
labs(title = "Construction Times for Japanese Nuclear Reactors",
x = "Date",
y = "Reactor Site")
japan$uniname
japan$replace
japan$uniname
#delete the first row
japan <- japan[-1,]
#add a column row number
japan<- mutate(japan, no =row_number())
# change the japan$name to unique
japan<- mutate(japan, uniname = paste(japan$name,japan$no, ""))
#reverse the name order
japan$uniname<- rev(japan$uniname)
#change the op_start format to date
japan$op_start <- dmy(japan$op_start)
#change the const_start format to date
japan$const_start<- dmy(japan$const_start)
#replace the type name to the assigned one.
japan$type<- str_replace(japan$type,"BWR", "Boiling Water") %>%
str_replace("FBR", "Fast Breeder") %>%
str_replace("PWR", "Pressurized Water") %>%
str_replace("GCR", "Gas Cooled") %>%
str_replace("HWGCR", "Heavy Water Gas Cooled")
#create a list tat removes the repeated names
japan<- mutate(japan, replace=paste(japan$name,japan$reactor,""))
japan$replace <- sort(japan$replace, decreasing = T) %>%
str_replace("1","") %>%
str_replace_all(".*[0-9].*", "")
japan$replace <- rev(japan$replace)
#japan$uniname
#japan$replace
#graph
ggplot(japan[which(japan$type != ""),],aes(x=year(const_start), y=uniname))+
geom_segment(aes(xend=year(op_start), yend=uniname, color = type)) +
scale_y_discrete(labels=japan$replace,breaks=japan$uniname)+
scale_x_continuous(limits = c(1960, 2010),
breaks = seq(1960,2010,by=5)) +
labs(title = "Construction Times for Japanese Nuclear Reactors",
x = "Date",
y = "Reactor Site")
#add html
page <- read_html("https://en.wikipedia.org/wiki/List_of_nuclear_reactors") %>%
html_nodes(xpath= "//*/table[contains(@class, 'wikitable')]")
#France
france <- page %>%
.[[14]] %>%
html_table(fill = TRUE)
#change names
names(france) <- c("name", "reactor", "type", "model", "status",
"net", "gross", "const_start", "op_start", "closure")
# add country name
france<- mutate(france, country = "France")
#Japan
japan <- page %>%
.[[21]] %>%
html_table(fill = TRUE)
#change names
names(japan) <- c("name", "reactor", "type", "model", "status",
"net", "gross", "const_start", "op_start", "closure")
#add country name
japan<- mutate(japan, country = "Japan")
#combine two data frame together
data <- rbind(japan,france)
#delete the first row
data <- data[-1,]
#change name of the type
data$type<- str_replace(data$type,"BWR", "Boiling Water") %>%
str_replace("FBR", "Fast Breeder") %>%
str_replace("PWR", "Pressurized Water") %>%
str_replace("GCR", "Gas Cooled") %>%
str_replace("HWGCR", "Heavy Water Gas Cooled")
#change the date format
data$const_start<- dmy(data$const_start)
data$net <- as.integer(data$net)
#graph
ggplot(data[which(data$type != ""),])+
geom_point(aes(x=year(const_start),y=net, shape = type, color = country),size = 2)+
scale_x_continuous(limits = c(1955, 2005),
breaks = seq(1960,2000,by=10)) +
scale_y_continuous(limits = c(0,1500),
breaks = seq(0, 1500, by = 500))+
labs(title = "Net Reactor Capacities in France and Japan",
x = "Construction Start Date",
y = "Net Capacity(MW)")
#delete the first row
japan <- japan[-1,]
#add a column row number
japan<- mutate(japan, no =row_number())
# change the japan$name to unique
japan<- mutate(japan, uniname = paste(japan$name,japan$no, ""))
#reverse the name order
japan$uniname<- rev(japan$uniname)
#change the op_start format to date
japan$op_start <- dmy(japan$op_start)
#change the const_start format to date
japan$const_start<- dmy(japan$const_start)
#replace the type name to the assigned one.
japan$type<- str_replace(japan$type,"BWR", "Boiling Water") %>%
str_replace("FBR", "Fast Breeder") %>%
str_replace("PWR", "Pressurized Water") %>%
str_replace("GCR", "Gas Cooled") %>%
str_replace("HWGCR", "Heavy Water Gas Cooled")
#create a list tat removes the repeated names
japan<- mutate(japan, replace=paste(japan$name,japan$reactor,""))
japan$replace <- sort(japan$replace, decreasing = T) %>%
str_replace("1","") %>%
str_replace_all(".*[0-9].*", "")
japan$replace <- rev(japan$replace)
#japan$uniname
#japan$replace
#graph
ggplot(japan[which(japan$type != ""),],aes(x=year(const_start), y=uniname))+
geom_segment(aes(xend=year(op_start), yend=uniname, color = type)) +
scale_y_discrete(labels=japan$replace,breaks=japan$uniname)+
scale_x_continuous(limits = c(1960, 2010),
breaks = seq(1960,2010,by=5)) +
labs(title = "Construction Times for Japanese Nuclear Reactors",
x = "Date",
y = "Reactor Site")
japan$op_start
japan$const_start
ggplot(japan[which(japan$type != ""),],aes(x=year(na.omit(const_start)), y=uniname))+
geom_segment(aes(xend=year(na.omit(op_start)), yend=uniname, color = type)) +
scale_y_discrete(labels=japan$replace,breaks=japan$uniname)+
scale_x_continuous(limits = c(1960, 2010),
breaks = seq(1960,2010,by=5)) +
labs(title = "Construction Times for Japanese Nuclear Reactors",
x = "Date",
y = "Reactor Site")
ggplot(japan[which(japan$type != ""),],aes(x=year(const_start), y=uniname))+
geom_segment(aes(xend=year(op_start), yend=uniname, color = type)) +
scale_y_discrete(labels=japan$replace,breaks=japan$uniname)+
scale_x_continuous(limits = c(1960, 2010),
breaks = seq(1960,2010,by=5)) +
labs(title = "Construction Times for Japanese Nuclear Reactors",
x = "Date",
y = "Reactor Site")
na.omit(japan$op_start)
na.omit(japan$const_start)
japan$op_start <- na.omit(japan$op_start)
japan$op_start <- na.omit(japan$const_start)
japan$op_start
japan$const_start
japan[which(japan$type != ""),]
na.omit(japan)
ggplot(na.omit(japan[which(japan$type != ""),]),aes(x=year(const_start), y=uniname))+
geom_segment(aes(xend=year(op_start), yend=uniname, color = type)) +
scale_y_discrete(labels=japan$replace,breaks=japan$uniname)+
scale_x_continuous(limits = c(1960, 2010),
breaks = seq(1960,2010,by=5)) +
labs(title = "Construction Times for Japanese Nuclear Reactors",
x = "Date",
y = "Reactor Site")
japan$const_start
na.omit(japan)
length(na.omit(japan))
length(na.omit(japan$name))
japan[which(japan$type != ""),]
length(na.omit(japan$name))
view(japan)
View(japan)
japan$uniname
japan<- mutate(japan, replace=paste(japan$name,japan$reactor,""))
japan$replace <- sort(japan$replace, decreasing = T) %>%
str_replace("1","") %>%
str_replace_all(".*[0-9].*", "")
japan$replace <- rev(japan$replace)
japan$replace
japan<- mutate(japan, replace=paste(japan$name,japan$reactor,""))
japan$replace
japan$replace <- sort(japan$replace, decreasing = T) %>%
str_replace("1","") %>%
str_replace_all(".*[0-9].*", "")
japan$replace <- rev(japan$replace)
japan$replace
japan<- mutate(japan, replace=paste(japan$name,japan$reactor,""))
japan$replace <- rev(japan$replace)
japan<- mutate(japan, label=paste(japan$name,japan$reactor,""))
japan$label <- sort(japan$label, decreasing = T) %>%
str_replace("1","") %>%
str_replace_all(".*[0-9].*", "")
japan$label
japan$replace
ggplot(na.omit(japan[which(japan$type != ""),]),aes(x=year(const_start), y=replace))+
geom_segment(aes(xend=year(op_start), yend=replace, color = type)) +
scale_y_discrete(labels=japan$label,breaks=japan$replace)+
scale_x_continuous(limits = c(1960, 2010),
breaks = seq(1960,2010,by=5)) +
labs(title = "Construction Times for Japanese Nuclear Reactors",
x = "Date",
y = "Reactor Site")
#add html
page <- read_html("https://en.wikipedia.org/wiki/List_of_nuclear_reactors") %>%
html_nodes(xpath= "//*/table[contains(@class, 'wikitable')]")
#France
france <- page %>%
.[[14]] %>%
html_table(fill = TRUE)
#change names
names(france) <- c("name", "reactor", "Type", "model", "status",
"net", "gross", "const_start", "op_start", "closure")
# add country name
france<- mutate(france, Country = "France")
#Japan
japan <- page %>%
.[[21]] %>%
html_table(fill = TRUE)
#change names
names(japan) <- c("name", "reactor", "Type", "model", "status",
"net", "gross", "const_start", "op_start", "closure")
#add country name
japan<- mutate(japan, Country = "Japan")
#combine two data frame together
data <- rbind(japan,france)
#delete the first row
data <- data[-1,]
#change name of the type
data$type<- str_replace(data$type,"BWR", "Boiling Water") %>%
str_replace("FBR", "Fast Breeder") %>%
str_replace("PWR", "Pressurized Water") %>%
str_replace("GCR", "Gas Cooled") %>%
str_replace("HWGCR", "Heavy Water \nGas Cooled")
#change the date format
data$const_start<- dmy(data$const_start)
data$net <- as.integer(data$net)
#graph
ggplot(data[which(data$type != ""),])+
geom_point(aes(x=year(const_start),y=net, shape = type, color = country),size = 2)+
scale_x_continuous(limits = c(1955, 2005),
breaks = seq(1960,2000,by=10)) +
scale_y_continuous(limits = c(0,1500),
breaks = seq(0, 1500, by = 500))+
labs(title = "Net Reactor Capacities in France and Japan",
x = "Construction Start Date",
y = "Net Capacity(MW)")
data$Type
view(data)
View(data)
View(data)
library (rvest)
library(xml2)
library(ggplot2)
library(lubridate)
library(stringr)
library(dplyr)
library(tidyr)
library(readr)
library(scales)
#add html
page <- read_html("https://en.wikipedia.org/wiki/List_of_nuclear_reactors") %>%
html_nodes(xpath= "//*/table[contains(@class, 'wikitable')]")
#France
france <- page %>%
.[[14]] %>%
html_table(fill = TRUE)
#delete the first row
france <- france[-1,]
#change names
names(france) <- c("name", "reactor", "Type", "model", "status",
"net", "gross", "const_start", "op_start", "closure")
# add country name
france<- mutate(france, Country = "France")
#Japan
japan <- page %>%
.[[21]] %>%
html_table(fill = TRUE)
#change names
names(japan) <- c("name", "reactor", "Type", "model", "status",
"net", "gross", "const_start", "op_start", "closure")
#delete the first row
japan <- japan[-1,]
#add country name
japan<- mutate(japan, Country = "Japan")
#combine two data frame together
data <- rbind(japan,france)
#delete the first row
data <- data[-1,]
#change name of the type
data$Type<- str_replace(data$Type,"BWR", "Boiling Water") %>%
str_replace("FBR", "Fast Breeder") %>%
str_replace("PWR", "Pressurized Water") %>%
str_replace("GCR", "Gas Cooled") %>%
str_replace("HWGCR", "Heavy Water Gas Cooled")
#change the date format
data$const_start<- dmy(data$const_start)
data$net <- as.integer(data$net)
#graph
ggplot(data[which(data$Type != ""),])+
geom_point(aes(x=year(const_start),y=net, shape = Type, color = Country),size = 2)+
scale_x_continuous(limits = c(1955, 2005),
breaks = seq(1960,2000,by=10)) +
scale_y_continuous(limits = c(0,1500),
breaks = seq(0, 1500, by = 500))+
labs(title = "Net Reactor Capacities in France and Japan",
x = "Construction Start Date",
y = "Net Capacity(MW)")
levels(data$Type)
class(data$Type)
data$Type<- as.factor(data$Type)
data$Type<- str_replace(data$Type,"BWR", "Boiling Water") %>%
str_replace("FBR", "Fast Breeder") %>%
str_replace("PWR", "Pressurized Water") %>%
str_replace("GCR", "Gas Cooled") %>%
str_replace("HWGCR", "Heavy Water Gas Cooled")
ggplot(data[which(data$Type != ""),])+
geom_point(aes(x=year(const_start),y=net, shape = Type, color = Country),size = 2)+
scale_x_continuous(limits = c(1955, 2005),
breaks = seq(1960,2000,by=10)) +
scale_y_continuous(limits = c(0,1500),
breaks = seq(0, 1500, by = 500))+
labs(title = "Net Reactor Capacities in France and Japan",
x = "Construction Start Date",
y = "Net Capacity(MW)")
data$Type<- str_replace(data$Type,"BWR", "Boiling Water") %>%
str_replace("FBR", "Fast Breeder") %>%
str_replace("PWR", "Pressurized Water") %>%
str_replace("GCR", "Gas Cooled") %>%
str_replace_all("HWGCR", "Heavy Water Gas Cooled")
ggplot(data[which(data$Type != ""),])+
geom_point(aes(x=year(const_start),y=net, shape = Type, color = Country),size = 2)+
scale_x_continuous(limits = c(1955, 2005),
breaks = seq(1960,2000,by=10)) +
scale_y_continuous(limits = c(0,1500),
breaks = seq(0, 1500, by = 500))+
labs(title = "Net Reactor Capacities in France and Japan",
x = "Construction Start Date",
y = "Net Capacity(MW)")
PositiveX <- function(y){
y <- y * - 1
y [y > 0]
}
x < - c(NA, 1, -2, 3, -4, 5)
PositiveX(x)
# <Your fix here>
m < - c(NA, 1, -2, 3, -4, 5)
y <- 3
y <- m * - 1
y [y > 0]
# <Your fix here>
x < - c(NA, 1, -2, 3, -4, 5)
y <- 3
y <- x * - 1
y [y > 0]
# <Your fix here>
x < - c(NA, 1, -2, 3, -4, 5)
y <- 3
y <- x * - 1
y [y > 0]
x < - c( NA,1,-2,3,-4,5 )
y<-3
y<-x * - 1
y[ y>0 ]
# <Your fix here>
a < - c(NA, 1, -2, 3, -4, 5)
y <- 3
y <- a * - 1
y [y > 0]
# <Your fix here>
x_vector < - c(NA, 1, -2, 3, -4, 5)
y <- 3
y <- x_vector * - 1
y [y > 0]
x < - c( NA,1,-2,3,-4,5 )
y<-3
y<-x * - 1
y[ y>0 ]
# <Your fix here>
x_vector <- c(NA, 1, -2, 3, -4, 5)
y <- 3
y <- x_vector * - 1
y [y > 0]
# <Your fix here>
df <- iris
mean_df <- df %>%
group_by(Species) %>%
summarise_each(funs(mean))
df<- mean_df[c(2,3,4,5,1)]
mean_df <- df %>%
group_by(Species) %>%
summarise_each(mean)
df <- iris
df %>%
group_by(Species)
library(rvest)
library(xml2)
library(ggplot2)
library(lubridate)
library(stringr)
library(dplyr)
library(tidyr)
library(readr)
library(scales)
# <Your fix here>
df <- iris
mean_df <- df %>%
group_by(Species) %>%
summarise_each(mean)
df<- mean_df[c(2,3,4,5,1)]
# <Your fix here>
df <- iris
mean_df <- df %>%
group_by(Species) %>%
summarise_each(funs(mean))
df<- mean_df[c(2,3,4,5,1)]
df
mean_df <- summarise_each(group_by(df, Species), summarise_each(funs(mean)))
mean_df <- summarise_each(group_by(df, Species), funs(mean))
mean_df
mean_df
# <Your fix here>
df <- iris
#mean_df <- df %>%
#  group_by(Species) %>%
#  summarise_each(funs(mean))
mean_df <- summarise_each(
group_by(df,
Species),
funs(mean))
mean_df <- mean_df[c(2,3,4,5,1)]
mean_df
library(dplyr)
install.packages("shiny")
runApp("my_app")
library(shiny)
runApp("my_app")
setwd("~/Desktop/Stats R/stat133-su2016/20-lesson/notes")
setwd("~/Desktop/Stats R/stat133-su2016/20-lesson/examples")
list.files()
runApp("my_app")
runApp('001-histogram')
runApp('001-histogram')
runApp('001-histogram', display.mode = "showcase")
?sliderInput
?sliderPanel
?sidebarPanel
?sidebarLayout
?sliderInput
runApp('~/Desktop/Stats R/githubrepos-jennyjiang95/labs6/demo')
?sidebarLayout
?sliderInput
?fileInput
runApp('~/Desktop/Stats R/githubrepos-jennyjiang95/labs6/demo/my_first_app')
?selectInput
?passwordInput
runApp('~/Desktop/Stats R/githubrepos-jennyjiang95/labs6/demo/my_first_app')
runApp('~/Desktop/Stats R/githubrepos-jennyjiang95/labs6/demo/my_first_app')
